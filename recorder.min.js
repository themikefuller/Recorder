"use strict";function Recorder(){let mediaRecorder,recorder={},Started=()=>{};return recorder.permission=((video=!0,audio=!0)=>new Promise((resolve,reject)=>{let promises=[];video&&promises.push(navigator.permissions.query({name:"camera"})),audio&&promises.push(navigator.permissions.query({name:"microphone"})),Promise.all(promises).then(results=>{let ask=!1;results.forEach(result=>{"granted"!=result.state&&(ask=!0)}),ask?navigator.mediaDevices.getUserMedia({video:video,audio:audio}).then(stream=>{stream.getTracks().forEach(track=>track.stop()),resolve("permission granted")}).catch(err=>{reject("permission denied")}):resolve("permission granted")})})),recorder.getStream=((video=!0,audio=!0)=>new Promise((resolve,reject)=>{navigator.mediaDevices.getUserMedia({video:video,audio:audio}).then(stream=>{resolve(stream)}).catch(err=>{reject({code:400,message:"Could not gain access to recording devices."})})})),recorder.record=function(stream,options={}){return new Promise((resolve,reject)=>{let type=options.type||"video/webm",chunks=[];new MediaSource(stream);(mediaRecorder=new MediaRecorder(stream,{audioBitsPerSecond:options.audioBitrate||128e3,videoBitsPerSecond:options.videoBitrate||25e5})).start(),mediaRecorder.onstart=(()=>{Started(),recorder.recording=!0}),mediaRecorder.ondataavailable=function(e){chunks.push(e.data)},mediaRecorder.onstop=function(){stream.getTracks().forEach(track=>track.stop()),recorder.recording=!1;let blob=new Blob(chunks,{type:type}),reader=new FileReader;reader.onload=(e=>{resolve(e.target.result)}),reader.readAsDataURL(blob)}})},recorder.onStart=(callback=>{callback&&"function"==typeof callback&&(Started=callback)}),recorder.stop=function(){setTimeout(()=>{mediaRecorder.stop()},500)},recorder}